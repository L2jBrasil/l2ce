package com.jdevelopstation.l2ce.gui.pane;

import java.awt.Dimension;
import java.awt.Insets;
import java.io.File;

import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JComponent;
import javax.swing.JPanel;
import javax.swing.JTabbedPane;
import javax.swing.JTextField;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import com.jdevelopstation.commons.properties.listeners.PropertyListener;
import com.jdevelopstation.l2ce.data.xml.holder.ClientVersionHolder;
import com.jdevelopstation.l2ce.gui.listeners.OptionPane_OkCancelActionListenerImpl;
import com.jdevelopstation.l2ce.gui.listeners.OptionPane_SelectDirActionListenerImpl;
import com.jdevelopstation.l2ce.properties.GeneralProperties;
import com.jdevelopstation.l2ce.utils.BundleUtils;
import com.jdevelopstation.l2ce.version.ClientVersion;

/**
 * @author VISTALL
 * @date 22:03/05.06.2011
 */
public class OptionPane extends JPanel
{
	private JPanel _root;
	private JTabbedPane _tabbedPane;
	private JTextField _workingDir;
	private JButton _selectDir;
	private JPanel _generalPane;
	private JPanel _workingDirectoryPane;
	private JComboBox _clientVersionBox;
	private JButton _okButton;
	private JButton _cancelButton;

	private String _tempDir;

	public OptionPane()
	{
		$$$setupUI$$$();

		_tabbedPane.setTitleAt(0, BundleUtils.getInstance().getBundle("OptionPane.General"));
		_workingDirectoryPane.setBorder(BorderFactory.createTitledBorder(BundleUtils.getInstance().getBundle("OptionPane.WorkingDirectory")));
		_selectDir.setText(BundleUtils.getInstance().getBundle("OptionPane.SelectDir"));

		File f = new File(GeneralProperties.WORKING_DIRECTORY);
		_workingDir.setText(f.getAbsolutePath());

		_clientVersionBox.setModel(new DefaultComboBoxModel(ClientVersionHolder.getInstance().getVersionMap().values().toArray()));

		ClientVersion v = ClientVersionHolder.getInstance().getVersion(GeneralProperties.CURRENT_VERSION);
		if(v != null)
			_clientVersionBox.setSelectedItem(v);
		else
			_clientVersionBox.setSelectedIndex(-1);

		_tempDir = GeneralProperties.WORKING_DIRECTORY;
		_okButton.addActionListener(new OptionPane_OkCancelActionListenerImpl(true));
		_cancelButton.addActionListener(new OptionPane_OkCancelActionListenerImpl(false));
		_selectDir.addActionListener(new OptionPane_SelectDirActionListenerImpl());
	}

	public void save()
	{
		ClientVersion v = (ClientVersion) _clientVersionBox.getSelectedItem();
		if(v != null)
			GeneralProperties.CURRENT_VERSION = v.getName();
		else
			GeneralProperties.CURRENT_VERSION = null;

		GeneralProperties.WORKING_DIRECTORY = _tempDir;

		PropertyListener.getInstance().firePropertyChanged(GeneralProperties.class);
	}

	private void createUIComponents()
	{
		_root = this;
	}

	public void setTempDir(String tempDir)
	{
		_tempDir = tempDir;
	}

	/**
	 * Method generated by IntelliJ IDEA GUI Designer
	 * >>> IMPORTANT!! <<<
	 * DO NOT edit this method OR call it in your code!
	 *
	 * @noinspection ALL
	 */
	private void $$$setupUI$$$()
	{
		createUIComponents();
		_root.setLayout(new GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
		_tabbedPane = new JTabbedPane();
		_root.add(_tabbedPane, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, new Dimension(200, 200), null, 0, false));
		_generalPane = new JPanel();
		_generalPane.setLayout(new GridLayoutManager(3, 1, new Insets(0, 0, 0, 0), -1, -1));
		_tabbedPane.addTab("General", _generalPane);
		_workingDirectoryPane = new JPanel();
		_workingDirectoryPane.setLayout(new GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
		_generalPane.add(_workingDirectoryPane, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_NORTH, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
		_workingDirectoryPane.setBorder(BorderFactory.createTitledBorder("Working directory"));
		_workingDir = new JTextField();
		_workingDir.setEditable(false);
		_workingDirectoryPane.add(_workingDir, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
		_selectDir = new JButton();
		_selectDir.setText("Select dir");
		_workingDirectoryPane.add(_selectDir, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
		final Spacer spacer1 = new Spacer();
		_generalPane.add(spacer1, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
		final JPanel panel1 = new JPanel();
		panel1.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
		_generalPane.add(panel1, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
		panel1.setBorder(BorderFactory.createTitledBorder("Client version"));
		_clientVersionBox = new JComboBox();
		panel1.add(_clientVersionBox, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
		final JPanel panel2 = new JPanel();
		panel2.setLayout(new GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
		_root.add(panel2, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_EAST, GridConstraints.FILL_VERTICAL, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
		_okButton = new JButton();
		_okButton.setText("OK");
		panel2.add(_okButton, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_EAST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
		_cancelButton = new JButton();
		_cancelButton.setText("Cancel");
		panel2.add(_cancelButton, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_EAST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
	}

	/**
	 * @noinspection ALL
	 */
	public JComponent $$$getRootComponent$$$()
	{
		return _root;
	}
}
