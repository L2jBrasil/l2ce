package com.jdevelopstation.l2ce.gui.pane;

import java.awt.Dimension;
import java.awt.Insets;

import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JPanel;
import javax.swing.JScrollPane;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import com.jdevelopstation.commons.properties.listeners.PropertyListener;
import com.jdevelopstation.l2ce.gui.listeners.DatPane_ArgBoxItemListenerImpl;
import com.jdevelopstation.l2ce.gui.listeners.DatPane_ClearButtonActionListenerImpl;
import com.jdevelopstation.l2ce.gui.listeners.DatPane_ExportButtonActionListenerImpl;
import com.jdevelopstation.l2ce.gui.listeners.DatPane_FileListListSelectionListenerImpl;
import com.jdevelopstation.l2ce.gui.listeners.DatPane_ImportButtonActionListenerImpl;
import com.jdevelopstation.l2ce.gui.listeners.DatPane_LoadButtonActionListenerImpl;
import com.jdevelopstation.l2ce.gui.listeners.DatPane_ModifyButtonActionListenerImpl;
import com.jdevelopstation.l2ce.gui.listeners.DatPane_PropertyChangeListenerImpl;
import com.jdevelopstation.l2ce.gui.listeners.DatPane_SaveButtonActionListenerImpl;
import com.jdevelopstation.l2ce.gui.renders.DatPane_FileListCellRenderer;
import com.jdevelopstation.l2ce.properties.GeneralProperties;
import com.jdevelopstation.l2ce.utils.BundleUtils;

/**
 * @author VISTALL
 * @date 8:20/18.05.2011
 */
public class DatPane extends JPanel
{
	private JList _fileList;
	private JPanel _contentPane;
	private JButton _loadButton;
	private JButton _saveButton;
	private JButton _importButton;
	private JButton _exportButton;
	private JButton _clearButton;
	private JComboBox _arg;
	private JLabel _argumentLabel;
	private JButton _modifyButton;

	public DatPane()
	{
		$$$setupUI$$$();

		_loadButton.setText(BundleUtils.getInstance().getBundle("DatPane.LoadButton.Text"));
		_exportButton.setText(BundleUtils.getInstance().getBundle("DatPane.ExportButton.Text"));
		_importButton.setText(BundleUtils.getInstance().getBundle("DatPane.ImportButton.Text"));
		_saveButton.setText(BundleUtils.getInstance().getBundle("DatPane.SaveButton.Text"));
		_clearButton.setText(BundleUtils.getInstance().getBundle("DatPane.ClearButton.Text"));

		PropertyListener.getInstance().addListener(GeneralProperties.class, new DatPane_PropertyChangeListenerImpl(this));

		_loadButton.addActionListener(new DatPane_LoadButtonActionListenerImpl(this));
		_clearButton.addActionListener(new DatPane_ClearButtonActionListenerImpl(this));
		_exportButton.addActionListener(new DatPane_ExportButtonActionListenerImpl(this));
		_importButton.addActionListener(new DatPane_ImportButtonActionListenerImpl(this));
		_saveButton.addActionListener(new DatPane_SaveButtonActionListenerImpl(this));
		_modifyButton.addActionListener(new DatPane_ModifyButtonActionListenerImpl(this));

		_arg.setModel(new DefaultComboBoxModel(new String[]{
				"-s",
				"-l"
		}));
		_arg.addItemListener(new DatPane_ArgBoxItemListenerImpl(this));
	}

	private void createUIComponents()
	{
		_contentPane = this;
		_fileList = new JList();
		_fileList.setCellRenderer(new DatPane_FileListCellRenderer());
		_fileList.addListSelectionListener(new DatPane_FileListListSelectionListenerImpl(this));
	}

	public JList getFileList()
	{
		return _fileList;
	}

	public JButton getLoadButton()
	{
		return _loadButton;
	}

	public JButton getSaveButton()
	{
		return _saveButton;
	}

	public JButton getImportButton()
	{
		return _importButton;
	}

	public JButton getExportButton()
	{
		return _exportButton;
	}

	public JButton getClearButton()
	{
		return _clearButton;
	}

	public JComboBox getArgBox()
	{
		return _arg;
	}

	public JButton getModifyButton()
	{
		return _modifyButton;
	}

	/**
	 * Method generated by IntelliJ IDEA GUI Designer
	 * >>> IMPORTANT!! <<<
	 * DO NOT edit this method OR call it in your code!
	 *
	 * @noinspection ALL
	 */
	private void $$$setupUI$$$()
	{
		createUIComponents();
		_contentPane.setLayout(new GridLayoutManager(1, 2, new Insets(5, 5, 5, 5), -1, -1));
		final JScrollPane scrollPane1 = new JScrollPane();
		scrollPane1.setVerticalScrollBarPolicy(22);
		_contentPane.add(scrollPane1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
		scrollPane1.setViewportView(_fileList);
		final JPanel panel1 = new JPanel();
		panel1.setLayout(new GridLayoutManager(5, 1, new Insets(0, 0, 0, 0), -1, -1));
		_contentPane.add(panel1, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
		final JPanel panel2 = new JPanel();
		panel2.setLayout(new GridLayoutManager(5, 1, new Insets(0, 0, 0, 0), -1, -1));
		panel1.add(panel2, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_EAST, GridConstraints.FILL_VERTICAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, new Dimension(101, 119), null, 0, false));
		_loadButton = new JButton();
		_loadButton.setEnabled(false);
		_loadButton.setText("Load");
		panel2.add(_loadButton, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(77, 25), null, 0, false));
		_saveButton = new JButton();
		_saveButton.setEnabled(false);
		_saveButton.setText("Save");
		panel2.add(_saveButton, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(77, 25), null, 0, false));
		_importButton = new JButton();
		_importButton.setEnabled(false);
		_importButton.setText("Import");
		panel2.add(_importButton, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
		_exportButton = new JButton();
		_exportButton.setEnabled(false);
		_exportButton.setText("Export");
		panel2.add(_exportButton, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
		_modifyButton = new JButton();
		_modifyButton.setEnabled(false);
		_modifyButton.setText("Modify");
		panel2.add(_modifyButton, new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
		final Spacer spacer1 = new Spacer();
		panel1.add(spacer1, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
		_clearButton = new JButton();
		_clearButton.setEnabled(false);
		_clearButton.setText("Clear");
		panel1.add(_clearButton, new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
		_arg = new JComboBox();
		panel1.add(_arg, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
		_argumentLabel = new JLabel();
		_argumentLabel.setText("Argument:");
		panel1.add(_argumentLabel, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
	}

	/**
	 * @noinspection ALL
	 */
	public JComponent $$$getRootComponent$$$()
	{
		return _contentPane;
	}
}
